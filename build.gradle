/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'

version = ''
sourceCompatibility = 1.8
targetCompatibility = 1.8

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',  
        	'Implementation-Version': version,
        	'Main-Class': 'com.experitest.auto.IOSBrowserLocaltests'
    }
    baseName = project.name + '-tests'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
task plugin(type: Zip) {
    from (configurations.compile) {
        into ('libs/')
    }
    from (sourceSets.main.output.classesDir) {
        into ('classes/')
    }
    from (sourceSets.main.resources) {
        into ('classes/')
    }
    from (new File(project.buildDir, 'tmp/jar/')) {
        into ('classes/META-INF/')
    }
}

plugin.dependsOn fatJar

task zip(type: Zip) {
   from fatJar
   from 'doc'
   from 'config'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile 'ch.qos.logback:logback-classic:1.1.2'
    
}

